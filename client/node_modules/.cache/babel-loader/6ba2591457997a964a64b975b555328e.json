{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taneli\\\\Desktop\\\\Tanelin jutut\\\\School things\\\\Koodailut\\\\Node.js\\\\WebApplications_FinalProject\\\\client\\\\src\\\\components\\\\SinglePost.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from \"react\";\nimport Comment from \"./Comment\";\nimport Post from \"./Post\";\nimport NewComment from \"./NewComment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SinglePost = () => {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [comments, setComments] = useState([]);\n  useEffect(() => {\n    const id = window.location.pathname.split(\"/\")[2];\n    fetch(\"/api/post/\" + id, {\n      method: \"GET\"\n    }).then(response => response.json()).then(json => {\n      setPost(json.post);\n      setComments(json.comments);\n    });\n    console.log();\n  }, []);\n\n  if (localStorage.getItem(\"Token\")) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Post, {\n        user: post.user,\n        title: post.title,\n        text: post.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 18\n      }, this), /*#__PURE__*/_jsxDEV(NewComment, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n          user: comment.user,\n          text: comment.text\n        }, comment._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Post, {\n      user: post.user,\n      title: post.title,\n      text: post.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 14\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: comments.map(comment => /*#__PURE__*/_jsxDEV(Comment, {\n        user: comment.user,\n        text: comment.text\n      }, comment._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(SinglePost, \"Xt4mMB3Yel6u5MyuqElP1sbtvco=\");\n\n_c = SinglePost;\nexport default SinglePost;\n\nvar _c;\n\n$RefreshReg$(_c, \"SinglePost\");","map":{"version":3,"sources":["C:/Users/Taneli/Desktop/Tanelin jutut/School things/Koodailut/Node.js/WebApplications_FinalProject/client/src/components/SinglePost.js"],"names":["useEffect","useState","Comment","Post","NewComment","SinglePost","post","setPost","comments","setComments","id","window","location","pathname","split","fetch","method","then","response","json","console","log","localStorage","getItem","user","title","text","map","comment","_id"],"mappings":";;;AAAA,SAAQA,SAAR,EAAmBC,QAAnB,QAAkC,OAAlC;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;;AAEA,MAAMC,UAAU,GAAG,MAAM;AAAA;;AACrB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,EAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMU,EAAE,GAAGC,MAAM,CAACC,QAAP,CAAgBC,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAX;AAEAC,IAAAA,KAAK,CAAC,eAAeL,EAAhB,EAAoB;AACrBM,MAAAA,MAAM,EAAE;AADa,KAApB,CAAL,CAGKC,IAHL,CAGUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHtB,EAIKF,IAJL,CAIUE,IAAI,IAAI;AACVZ,MAAAA,OAAO,CAACY,IAAI,CAACb,IAAN,CAAP;AACAG,MAAAA,WAAW,CAACU,IAAI,CAACX,QAAN,CAAX;AACH,KAPL;AAQIY,IAAAA,OAAO,CAACC,GAAR;AACP,GAZQ,EAYN,EAZM,CAAT;;AAcA,MAAIC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAJ,EAAmC;AAC/B,wBACI;AAAA,8BACK,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEjB,IAAI,CAACkB,IAAjB;AAAuB,QAAA,KAAK,EAAElB,IAAI,CAACmB,KAAnC;AAA0C,QAAA,IAAI,EAAEnB,IAAI,CAACoB;AAArD;AAAA;AAAA;AAAA;AAAA,cADL,eAEI,QAAC,UAAD;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAA,kBACKlB,QAAQ,CAACmB,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD;AAA2B,UAAA,IAAI,EAAEA,OAAO,CAACJ,IAAzC;AAA+C,UAAA,IAAI,EAAEI,OAAO,CAACF;AAA7D,WAAcE,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;;AACD,sBACI;AAAA,4BACK,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEvB,IAAI,CAACkB,IAAjB;AAAuB,MAAA,KAAK,EAAElB,IAAI,CAACmB,KAAnC;AAA0C,MAAA,IAAI,EAAEnB,IAAI,CAACoB;AAArD;AAAA;AAAA;AAAA;AAAA,YADL,eAEI;AAAA,gBACKlB,QAAQ,CAACmB,GAAT,CAAcC,OAAD,iBACV,QAAC,OAAD;AAA2B,QAAA,IAAI,EAAEA,OAAO,CAACJ,IAAzC;AAA+C,QAAA,IAAI,EAAEI,OAAO,CAACF;AAA7D,SAAcE,OAAO,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAzCD;;GAAMxB,U;;KAAAA,U;AA2CN,eAAeA,UAAf","sourcesContent":["import {useEffect, useState} from \"react\"\r\nimport Comment from \"./Comment\"\r\nimport Post from \"./Post\"\r\nimport NewComment from \"./NewComment\"\r\n\r\nconst SinglePost = () => {\r\n    const [post, setPost] = useState([])\r\n    const [comments, setComments] = useState([])\r\n\r\n    useEffect(() => {\r\n        const id = window.location.pathname.split(\"/\")[2]\r\n\r\n        fetch(\"/api/post/\" + id, {\r\n            method: \"GET\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                setPost(json.post)\r\n                setComments(json.comments)\r\n            })\r\n            console.log();\r\n    }, [])\r\n\r\n    if (localStorage.getItem(\"Token\")) {\r\n        return (\r\n            <div>\r\n                {<Post user={post.user} title={post.title} text={post.text}/>}\r\n                <NewComment />\r\n                <ul>\r\n                    {comments.map((comment) => (\r\n                        <Comment key={comment._id} user={comment.user} text={comment.text}/>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n    return (\r\n        <div>\r\n            {<Post user={post.user} title={post.title} text={post.text}/>}\r\n            <ul>\r\n                {comments.map((comment) => (\r\n                    <Comment key={comment._id} user={comment.user} text={comment.text}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SinglePost;"]},"metadata":{},"sourceType":"module"}