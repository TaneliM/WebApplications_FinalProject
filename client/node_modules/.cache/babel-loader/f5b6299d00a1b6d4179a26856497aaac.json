{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Taneli\\\\Desktop\\\\Tanelin jutut\\\\School things\\\\Koodailut\\\\Node.js\\\\WebApplications_FinalProject\\\\client\\\\src\\\\components\\\\NewComment.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\"; // Component for leaving a comment to a post.\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst NewPost = user => {\n  _s();\n\n  const [formData, setFormData] = useState({});\n\n  if (!localStorage.getItem(\"Token\")) {\n    window.location.href = \"/\";\n  }\n\n  const submit = e => {\n    e.preventDefault();\n    formData.id = window.location.pathname.split(\"/\")[2]; // Makes a call to the backend api to post the comment.\n\n    fetch(\"/api/post/comment/new\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\",\n        // The token is provided to verify that the user is logged in.\n        \"Authorization\": \"Auth \" + localStorage.getItem(\"Token\")\n      },\n      body: JSON.stringify(formData),\n      mode: \"cors\"\n    }).then(response => response.json()).then(data => {\n      window.location.reload();\n    });\n  }; // Updates the value when the user types the comment.\n\n\n  const handleChange = e => {\n    setFormData({ ...formData,\n      [e.target.name]: e.target.value\n    });\n  }; // Form for writing and sending the comment.\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: submit,\n      onChange: handleChange,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"New comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        type: \"text\",\n        name: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"submit\",\n        value: \"Comment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 9\n  }, this);\n};\n\n_s(NewPost, \"CgHqyReD6jKK1NawX+yWoebGi8o=\");\n\n_c = NewPost;\nexport default NewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewPost\");","map":{"version":3,"sources":["C:/Users/Taneli/Desktop/Tanelin jutut/School things/Koodailut/Node.js/WebApplications_FinalProject/client/src/components/NewComment.js"],"names":["useState","NewPost","user","formData","setFormData","localStorage","getItem","window","location","href","submit","e","preventDefault","id","pathname","split","fetch","method","headers","body","JSON","stringify","mode","then","response","json","data","reload","handleChange","target","name","value"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB,C,CAEA;;;;AACA,MAAMC,OAAO,GAAIC,IAAD,IAAU;AAAA;;AACtB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BJ,QAAQ,CAAC,EAAD,CAAxC;;AAEA,MAAI,CAACK,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAL,EAAoC;AAChCC,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;AACH;;AAED,QAAMC,MAAM,GAAIC,CAAD,IAAO;AAClBA,IAAAA,CAAC,CAACC,cAAF;AACAT,IAAAA,QAAQ,CAACU,EAAT,GAAcN,MAAM,CAACC,QAAP,CAAgBM,QAAhB,CAAyBC,KAAzB,CAA+B,GAA/B,EAAoC,CAApC,CAAd,CAFkB,CAIlB;;AACAC,IAAAA,KAAK,CAAC,uBAAD,EAA0B;AAC3BC,MAAAA,MAAM,EAAE,MADmB;AAE3BC,MAAAA,OAAO,EAAE;AACL,wBAAgB,kBADX;AAEL;AACA,yBAAiB,UAAUb,YAAY,CAACC,OAAb,CAAqB,OAArB;AAHtB,OAFkB;AAO3Ba,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAelB,QAAf,CAPqB;AAQ3BmB,MAAAA,IAAI,EAAE;AARqB,KAA1B,CAAL,CAUKC,IAVL,CAUUC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAVtB,EAWKF,IAXL,CAWUG,IAAI,IAAI;AACVnB,MAAAA,MAAM,CAACC,QAAP,CAAgBmB,MAAhB;AACH,KAbL;AAcH,GAnBD,CAPsB,CA4BtB;;;AACA,QAAMC,YAAY,GAAIjB,CAAD,IAAO;AACxBP,IAAAA,WAAW,CAAC,EAAC,GAAGD,QAAJ;AAAc,OAACQ,CAAC,CAACkB,MAAF,CAASC,IAAV,GAAiBnB,CAAC,CAACkB,MAAF,CAASE;AAAxC,KAAD,CAAX;AACH,GAFD,CA7BsB,CAiCtB;;;AACA,sBACI;AAAA,2BACI;AAAM,MAAA,QAAQ,EAAErB,MAAhB;AAAwB,MAAA,QAAQ,EAAEkB,YAAlC;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAU,QAAA,IAAI,EAAC,MAAf;AAAsB,QAAA,IAAI,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,QAAZ;AAAqB,QAAA,KAAK,EAAC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH,CA3CD;;GAAM3B,O;;KAAAA,O;AA6CN,eAAeA,OAAf","sourcesContent":["import { useState } from \"react\"\r\n\r\n// Component for leaving a comment to a post.\r\nconst NewPost = (user) => {\r\n    const [formData, setFormData] = useState({})\r\n\r\n    if (!localStorage.getItem(\"Token\")) {\r\n        window.location.href = \"/\";\r\n    }\r\n\r\n    const submit = (e) => {\r\n        e.preventDefault()\r\n        formData.id = window.location.pathname.split(\"/\")[2]\r\n\r\n        // Makes a call to the backend api to post the comment.\r\n        fetch(\"/api/post/comment/new\", {\r\n            method: \"POST\",\r\n            headers: {\r\n                \"Content-type\": \"application/json\",\r\n                // The token is provided to verify that the user is logged in.\r\n                \"Authorization\": \"Auth \" + localStorage.getItem(\"Token\") \r\n            },\r\n            body: JSON.stringify(formData),\r\n            mode: \"cors\"\r\n        })\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                window.location.reload();\r\n            })\r\n    }\r\n\r\n    // Updates the value when the user types the comment.\r\n    const handleChange = (e) => {\r\n        setFormData({...formData, [e.target.name]: e.target.value})\r\n    }\r\n\r\n    // Form for writing and sending the comment.\r\n    return (\r\n        <div>\r\n            <form onSubmit={submit} onChange={handleChange}>\r\n                <label>New comment</label>\r\n                <textarea type=\"text\" name=\"text\" />\r\n                <input type=\"submit\" value=\"Comment\"/>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewPost;"]},"metadata":{},"sourceType":"module"}